{"version":3,"sources":["components/MainToDo.js","App.js","index.js"],"names":["MainToDo","props","firstUserInput","input","setState","userInput","addingTask","taskList","addToList","listArray","state","list","push","localStorage","setItem","JSON","stringify","addedNewTasks","addingTaskToList","x","getItem","y","alpha","a","b","addTaskArray","console","log","filter","value","index","arr","removingInput","itemForRemoving","handleClick","e","clicked","target","id","listLS","listLSParse","parse","clickedItem","handleChangeRemove","c","item","removeItem","d","projectItems","on","temporaryStorage","nullState","bind","this","arrLS","getClickedItemName","getTasks","parseTasks","stateNull","jointArray","forEach","array","stateNullFull","Set","first","window","addEventListener","className","type","onChange","placeholder","onClick","class","style","textDecoration","listStyleType","display","marginLeft","map","obj","key","cursor","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a61315ed.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport deleteTaskBtn from './deleteTaskBtn';\r\nimport \"../style.css\";\r\n\r\nclass MainToDo extends Component {\r\n    constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userInput: '',\r\n      list: [],\r\n      clickedItem: [],\r\n      taskList: '',\r\n      projectItems: [],\r\n      addedNewTasks: [\"null\"],\r\n      on: false,\r\n      temporaryStorage: [],\r\n      nullState: [],\r\n      itemForRemoving: ''\r\n    }\r\n  this.handleChangeRemove = this.handleChangeRemove.bind(this);\r\n  }\r\n  firstUserInput = (input) => {\r\n    this.setState({\r\n        userInput: input\r\n    });\r\n  }\r\n  \r\n  addingTask = (input) => {\r\n      this.setState({\r\n          taskList: input\r\n      })\r\n  }\r\n\r\n  addToList = (input) => {\r\n      let listArray = this.state.list;\r\n      listArray.push(input);\r\n\r\n      localStorage.setItem('listLS', JSON.stringify(this.state.list));\r\n    \r\n      this.setState({\r\n          list: listArray,\r\n          userInput: '',\r\n          addedNewTasks: []\r\n      })\r\n  }\r\n  \r\n  addingTaskToList = (input) => {\r\n    let x = localStorage.getItem('clickedItem');\r\n    let y = x;\r\n    let alpha = this.state.taskList;\r\n\r\n    let a = localStorage.getItem('clickedItem');\r\n    let b = localStorage.getItem(a);\r\n\r\n    localStorage.setItem('shadowedTasks', b);\r\n    localStorage.setItem(y, JSON.stringify(alpha));\r\n    let c = localStorage.getItem('shadowedTasks');\r\n\r\n    let addTaskArray = this.state.addedNewTasks;\r\n    console.log(this.state.addedNewTasks);\r\n    addTaskArray.push(input); \r\n     \r\n     this.setState({\r\n        addedNewTasks: addTaskArray, \r\n         taskList: ''\r\n     }) \r\n\r\n    localStorage.setItem(x, JSON.stringify(this.state.addedNewTasks.\r\n        filter(function (value, index, arr) {\r\n            return value !== \"null\"})\r\n            )); \r\n            console.log(this.state.addedNewTasks);\r\n}\r\n\r\nremovingInput = (input) => {\r\n    this.setState({\r\n        itemForRemoving: input\r\n    })\r\n}\r\n\r\n   componentDidMount() {\r\n       if(localStorage.getItem('listLS') === null) { \r\n                this.setState({\r\n                    list: []\r\n                })\r\n            } else {\r\n                let arrLS = localStorage.getItem('listLS');\r\n                let parse = JSON.parse(arrLS);\r\n\r\n                this.setState({\r\n                      list: parse\r\n                })\r\n        }\r\n\r\n        if(localStorage.getItem('clickedItem') === null) {\r\n            this.setState({\r\n                addedNewTasks: []\r\n            })\r\n         } else {\r\n                let getClickedItemName = localStorage.getItem('clickedItem');\r\n                let getTasks = localStorage.getItem(getClickedItemName); \r\n                let parseTasks = JSON.parse(getTasks);\r\n\r\n                this.setState({\r\n                    addedNewTasks: parseTasks\r\n                });\r\n\r\n                localStorage.setItem('shadowedTasks', getTasks); \r\n        } \r\n    } \r\n    \r\n    componentDidUpdate() {\r\n        if(localStorage.getItem('shadowedTasks') !== null && localStorage.getItem('clickedItem') !== null) {\r\n        let a = localStorage.getItem('clickedItem');\r\n        let b = localStorage.getItem(a);\r\n        let c = localStorage.getItem('shadowedTasks');\r\n\r\n                let getTasks = localStorage.getItem([a]);\r\n                let combine = [getTasks||[], c||[]];\r\n                const stateNull = combine.filter(function (value, index, arr) {\r\n                         return value !== \"null\"\r\n                 });\r\n                    \r\n                     let jointArray = [];\r\n\r\n                     stateNull.forEach(array => {\r\n                        jointArray = [...jointArray, array] \r\n                     })\r\n                     const stateNullFull = [...new Set([...jointArray])];\r\n                     const [first, ...rest] = stateNullFull;\r\n                     \r\n                localStorage.setItem(a, first);\r\n                localStorage.removeItem('shadowedTasks'); \r\n                \r\n                this.setState({\r\n                         addedNewTasks: JSON.parse(b)\r\n                    })\r\n        }\r\n} \r\n\r\n  componentWillUnmount() {\r\n      window.addEventListener('beforeunload', function(e) {\r\n          return localStorage.push(this.state.list);\r\n      })\r\n      window.addEventListener('onload', function() {\r\n            return this.setState({\r\n                addedNewTasks: [\"null\"]\r\n            })\r\n      })\r\n  }\r\n  \r\n  handleClick = e => { //if clicked item is not state value\r\n      let clicked = e.target.id; \r\n      let listLS = localStorage.getItem('listLS');\r\n      let listLSParse = JSON.parse(listLS);\r\n      localStorage.setItem('clickedItem', listLSParse[clicked]);\r\n      let a = localStorage.getItem('clickedItem');\r\n      let b = localStorage.getItem(a);\r\n\r\n      this.setState({\r\n        clickedItem: localStorage.getItem('clickedItem')\r\n      });\r\n      (b !== null) ? \r\n        this.setState({ \r\n            addedNewTasks: JSON.parse(b)\r\n        }) :\r\n        this.setState({addedNewTasks: [\"null\"]});\r\n  }\r\n\r\n  handleChangeRemove = e => {\r\n      let a = localStorage.getItem('listLS');\r\n      let b = JSON.parse(a);\r\n      let c = b.filter(item => item !== e);\r\n\r\n      localStorage.setItem('listLS', JSON.stringify(c));\r\n      this.setState({\r\n          itemForRemoving: ''\r\n      })\r\n      localStorage.removeItem(e);\r\n      let d = this.state.list.filter(item => item !== e)\r\n      this.setState({\r\n          list: d\r\n      })\r\n    }\r\n    render() {\r\n        return (\r\n                <div className=\"ui container\">\r\n                    <div className=\"ui horizontal segments\">\r\n                        <div className=\"ui left floated segment\">\r\n                            <h2 className=\"ui basic segment\">Add project</h2>\r\n                        <div className=\"ui action input\">\r\n                        <input className=\"margin\" type=\"text\" \r\n                            onChange={(e) => this.firstUserInput(e.target.value)}\r\n                            value={this.state.userInput}  \r\n                            placeholder=\"Enter Project\" />\r\n                        <button className=\"ui primary button\" onClick={() => this.addToList(this.state.userInput)}>Add</button>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"ui right floated segment\">\r\n                            <h2 className=\"ui basic segment\">Remove project</h2>\r\n                            <div className=\"ui action input\">\r\n                            <input className=\"margin floatright\" type=\"text\"\r\n                                onChange={(e) => this.removingInput(e.target.value)}\r\n                                value={this.state.itemForRemoving}\r\n                                placeholder=\"Enter project for deleting\" />\r\n                            <button className=\"ui negative button\" onClick={() => this.handleChangeRemove(this.state.itemForRemoving)}>Remove</button>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"ui segment\">\r\n                        <h2 className=\"ui center aligned icon header\">\r\n                        <i class=\"clipboard list icon\"></i>\r\n                            Projects\r\n                        </h2>\r\n                        <div className=\"ui center aligned segment\">\r\n                            <ul style={{textDecoration: 'none', listStyleType: 'none', display: 'inline-block', marginLeft: \"-33px\"}}>\r\n                                {this.state.list.map((obj, id) => \r\n                                    <li key={obj[id]} id={id}\r\n                                    onClick={this.handleClick}\r\n                                    style={{cursor: 'pointer'}}>\r\n                                        {obj}\r\n                                    </li>\r\n                                )} \r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"ui horizontal segments\">\r\n                        <div className=\"ui center aligned segment\">\r\n                        <h2 className=\"ui center aligned icon header\">\r\n                            {this.state.clickedItem} \r\n                        </h2>\r\n                        <div className=\"ui action input\">\r\n                            <input  type=\"text\"\r\n                                    onChange={(e) => this.addingTask(e.target.value)}\r\n                                    value={this.state.taskList} \r\n                            placeholder=\"Enter Task\" /> \r\n                            <button className=\"ui button\" onClick={() => this.addingTaskToList(this.state.taskList)}>Add Task</button> \r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"middle aligned divided list\">\r\n                        <div className=\"item\">\r\n                            \r\n                            <div className=\"content\">\r\n                                \r\n                                <ul style={{textDecoration: 'none', listStyleType:'none'}}>\r\n                                    {this.state.addedNewTasks\r\n                                        .filter(function (value, index, arr) {\r\n                                            return value !== \"null\"})\r\n                                        .map((obj, id) => \r\n                                    <li key={obj[id]} id={id}>\r\n                                        {obj}  \r\n                                    </li>\r\n                                    )}                   \r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainToDo;","import React from 'react';\nimport MainToDo from './components/MainToDo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainToDo />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}
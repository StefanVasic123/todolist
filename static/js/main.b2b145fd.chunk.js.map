{"version":3,"sources":["components/MainToDo.js","App.js","index.js"],"names":["MainToDo","props","firstUserInput","input","setState","userInput","addingTask","taskList","addToList","listArray","state","list","push","localStorage","setItem","JSON","stringify","addedNewTasks","addingTaskToList","x","getItem","y","alpha","a","b","addTaskArray","filter","value","index","arr","removingInput","itemForRemoving","handleClick","e","clicked","target","id","listLS","listLSParse","parse","clickedItem","handleChangeRemove","c","item","removeItem","d","removeTask","clickedValue","console","log","filterArr","projectItems","on","temporaryStorage","nullState","clickedTask","bind","myRef","React","createRef","this","arrLS","getClickedItemName","getTasks","parseTasks","stateNull","jointArray","forEach","array","stateNullFull","Set","first","clickedRemovedItem","window","addEventListener","className","type","onChange","placeholder","onClick","style","textDecoration","listStyleType","display","marginLeft","map","obj","href","color","key","cursor","fontSize","paddingBottom","document","getElementById","checked","getClicked","Component","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.b2b145fd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"../style.css\";\r\nimport { Checkbox } from 'semantic-ui-react';\r\n\r\nclass MainToDo extends Component {\r\n    constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userInput: '',\r\n      list: [],\r\n      clickedItem: [],\r\n      taskList: '',\r\n      projectItems: [],\r\n      addedNewTasks: [],\r\n      on: false,\r\n      temporaryStorage: [],\r\n      nullState: [],\r\n      itemForRemoving: '',\r\n      clickedTask: []\r\n    }\r\n  this.handleChangeRemove = this.handleChangeRemove.bind(this);\r\n  this.myRef = React.createRef();\r\n  }\r\n  firstUserInput = (input) => {\r\n    this.setState({\r\n        userInput: input\r\n    });\r\n  }\r\n  \r\n  addingTask = (input) => {\r\n      this.setState({\r\n          taskList: input\r\n      })\r\n  }\r\n\r\n  addToList = (input) => {\r\n      let listArray = this.state.list;\r\n      listArray.push(input);\r\n\r\n      localStorage.setItem('listLS', JSON.stringify(this.state.list));\r\n    \r\n      this.setState({\r\n          list: listArray,\r\n          userInput: '',\r\n          addedNewTasks: []\r\n      })\r\n  }\r\n  \r\n  addingTaskToList = (input) => {\r\n    let x = localStorage.getItem('clickedItem');\r\n    let y = x;\r\n    let alpha = this.state.taskList;\r\n\r\n    let a = localStorage.getItem('clickedItem');\r\n    let b = localStorage.getItem(a);\r\n\r\n    localStorage.setItem('shadowedTasks', b);\r\n    localStorage.setItem(y, JSON.stringify(alpha));\r\n    let c = localStorage.getItem('shadowedTasks');\r\n\r\n    let addTaskArray = this.state.addedNewTasks;\r\n    addTaskArray.push(input); \r\n     \r\n     this.setState({\r\n        addedNewTasks: addTaskArray, \r\n         taskList: ''\r\n     }) \r\n\r\n    localStorage.setItem(x, JSON.stringify(this.state.addedNewTasks.\r\n        filter(function (value, index, arr) {\r\n            return value !== \"null\"})\r\n            )); \r\n}\r\n\r\nremovingInput = (input) => {\r\n    this.setState({\r\n        itemForRemoving: input\r\n    })\r\n}\r\n\r\n   componentDidMount() {\r\n       if(localStorage.getItem('listLS') === null) { \r\n                this.setState({\r\n                    list: []\r\n                })\r\n            } else {\r\n                let arrLS = localStorage.getItem('listLS');\r\n                let parse = JSON.parse(arrLS);\r\n\r\n                this.setState({\r\n                      list: parse\r\n                })\r\n        }\r\n\r\n        if(localStorage.getItem('clickedItem') === null) {\r\n            this.setState({\r\n                addedNewTasks: []\r\n            })\r\n         } else {\r\n                let getClickedItemName = localStorage.getItem('clickedItem');\r\n                let getTasks = localStorage.getItem(getClickedItemName); \r\n                let parseTasks = JSON.parse(getTasks);\r\n\r\n                this.setState({\r\n                    addedNewTasks: parseTasks\r\n                });\r\n\r\n                localStorage.setItem('shadowedTasks', getTasks); \r\n        } \r\n    } \r\n    \r\n    componentDidUpdate() {\r\n        if(localStorage.getItem('shadowedTasks') !== null && localStorage.getItem('clickedItem') !== null) {\r\n        let a = localStorage.getItem('clickedItem');\r\n        let b = localStorage.getItem(a);\r\n        let c = localStorage.getItem('shadowedTasks');\r\n\r\n                let getTasks = localStorage.getItem([a]);\r\n                let combine = [getTasks||[], c||[]];\r\n                const stateNull = combine.filter(function (value, index, arr) {\r\n                         return value !== \"null\"\r\n                 });\r\n                    \r\n                     let jointArray = [];\r\n\r\n                     stateNull.forEach(array => {\r\n                        jointArray = [...jointArray, array] \r\n                     })\r\n                     const stateNullFull = [...new Set([...jointArray])];\r\n                     const [first, ...rest] = stateNullFull;\r\n                     \r\n                localStorage.setItem(a, first);\r\n                localStorage.removeItem('shadowedTasks'); \r\n                \r\n                this.setState({\r\n                         addedNewTasks: JSON.parse(b)\r\n                    })\r\n        }\r\n        let clickedRemovedItem = localStorage.getItem('clickedItem');\r\n        localStorage.setItem(clickedRemovedItem, JSON.stringify(this.state.addedNewTasks))\r\n        \r\n} \r\n\r\n  componentWillUnmount() {\r\n      window.addEventListener('beforeunload', function(e) {\r\n          return localStorage.push(this.state.list);\r\n      })\r\n      window.addEventListener('onload', function() {\r\n            return this.setState({\r\n                addedNewTasks: []\r\n            })\r\n      })\r\n  }\r\n  \r\n  handleClick = e => { //if clicked item is not state value\r\n      let clicked = e.target.id; \r\n      let listLS = localStorage.getItem('listLS');\r\n      let listLSParse = JSON.parse(listLS);\r\n      localStorage.setItem('clickedItem', listLSParse[clicked]);\r\n      let a = localStorage.getItem('clickedItem');\r\n      let b = localStorage.getItem(a);\r\n\r\n      this.setState({\r\n        clickedItem: localStorage.getItem('clickedItem')\r\n      });\r\n      (b !== null) ? \r\n        this.setState({ \r\n            addedNewTasks: JSON.parse(b)\r\n        }) :\r\n        this.setState({addedNewTasks: [\"null\"]});\r\n  }\r\n    \r\n  handleChangeRemove = e => {\r\n      let a = localStorage.getItem('listLS');\r\n      let b = JSON.parse(a);\r\n      let c = b.filter(item => item !== e);\r\n\r\n      localStorage.setItem('listLS', JSON.stringify(c));\r\n      this.setState({\r\n          itemForRemoving: ''\r\n      })\r\n      localStorage.removeItem(e);\r\n      let d = this.state.list.filter(item => item !== e)\r\n      this.setState({\r\n          list: d\r\n      })\r\n    }\r\n\r\n    removeTask = (clickedValue) => {\r\n        console.log(this.state.addedNewTasks);\r\n        console.log(clickedValue);\r\n        let stateArr = this.state.addedNewTasks;\r\n        let filterArr = stateArr.filter(item => item !== clickedValue);\r\n            this.setState({\r\n                addedNewTasks: filterArr\r\n            })\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n                <div className=\"ui container\">\r\n                    <div className=\"ui horizontal segments\">\r\n                        <div className=\"ui left floated segment\">\r\n                            <h2 className=\"ui basic segment\">Add project</h2>\r\n                        <div className=\"ui action input\">\r\n                        <input className=\"margin\" type=\"text\" \r\n                            onChange={(e) => this.firstUserInput(e.target.value)}\r\n                            value={this.state.userInput}  \r\n                            placeholder=\"Enter Project\" />\r\n                        <button className=\"ui primary button\" onClick={() => this.addToList(this.state.userInput)}>Add</button>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"ui right floated segment\">\r\n                            <h2 className=\"ui basic segment\">Remove project</h2>\r\n                            <div className=\"ui action input\">\r\n                            <input className=\"margin floatright\" type=\"text\"\r\n                                onChange={(e) => this.removingInput(e.target.value)}\r\n                                value={this.state.itemForRemoving}\r\n                                placeholder=\"Enter project for deleting\" />\r\n                            <button className=\"ui negative button\" onClick={() => this.handleChangeRemove(this.state.itemForRemoving)}>Remove</button>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"ui segment\">\r\n                        <h2 className=\"ui center aligned icon header\">\r\n                        <i className=\"clipboard list icon\"></i>\r\n                            Projects\r\n                        </h2>\r\n                        <div className=\"ui center aligned segment\">\r\n                            <ul style={{textDecoration: 'none', listStyleType: 'none', display: 'inline-block', marginLeft: \"-33px\"}}>\r\n                                {this.state.list.map((obj, id) => \r\n                                    <a href=\"#task-segment\" style={{color: 'inherit'}}><li key={obj[id]} id={id}\r\n                                    onClick={\r\n                                        this.handleClick\r\n                                    }\r\n                                    style={{cursor: 'pointer', fontSize: '20px', paddingBottom: '5px'}}>\r\n                                        {obj}\r\n                                    </li></a>\r\n                                )} \r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"task-segment\" className=\"ui horizontal segments\">\r\n                        <div className=\"ui center aligned segment\">\r\n                        <h2 className=\"ui center aligned icon header\">\r\n                            {this.state.clickedItem} \r\n                        </h2>\r\n                        <div className=\"ui action input\">\r\n                            <input  type=\"text\"\r\n                                    onChange={(e) => this.addingTask(e.target.value)}\r\n                                    value={this.state.taskList} \r\n                            placeholder=\"Enter Task\" /> \r\n                            <button className=\"ui button\" onClick={() => this.addingTaskToList(this.state.taskList)}>Add Task</button> \r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"middle aligned divided list\">\r\n                        <div className=\"item\">\r\n                            \r\n                            <div className=\"content\">\r\n                                \r\n                                {this.state.addedNewTasks !== null && <ul style={{textDecoration: 'none', listStyleType:'none'}}>\r\n                                    {this.state.addedNewTasks\r\n                                        .filter(function (value, index, arr) {\r\n                                            return value !== \"null\"})\r\n                                        .map((obj, id) => \r\n                                    <li style={{ paddingBottom: '17px'}} key={obj[id]} id={id}>\r\n                                        <label><input type=\"checkbox\" id={obj[id]} onClick={() => {\r\n                                            let checkedIS = document.getElementById(obj[id]);\r\n                                            let isChecked = checkedIS.checked; //true or false\r\n                                            if(isChecked === true) {\r\n                                                let getClicked = localStorage.getItem('clickedItem'); //Simone\r\n                                                localStorage.setItem(getClicked + 'Clicked', (obj)); //set simOne value \r\n                                                let x = localStorage.getItem(getClicked + 'Clicked'); // get simOne\r\n                                             /*   let y = this.state.clickedItem;\r\n                                                let z = y.concat(x);\r\n                                                this.setState({\r\n                                                    clickedItem: z\r\n                                                })\r\n                                                console.log(this.state.clickedItem); \r\n\r\n\r\n                                                let getCurrent = localStorage.getItem(x);\r\n                                                \r\n                                                let concated = [getCurrent, obj]\r\n                                                \r\n                                                console.log(concated); */\r\n                                            } \r\n                                            }} />{obj}</label> \r\n                                        <button \r\n                                        onClick={() => this.removeTask(obj)} \r\n                                        className=\"ui right floated button\">\r\n                                            remove\r\n                                        </button> \r\n                                    </li>\r\n                                    )}                 \r\n                                </ul>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainToDo;","import React from 'react';\nimport MainToDo from './components/MainToDo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainToDo />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}
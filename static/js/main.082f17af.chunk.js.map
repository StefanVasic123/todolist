{"version":3,"sources":["components/MainToDo.js","App.js","index.js"],"names":["MainToDo","props","firstUserInput","input","setState","userInput","addingTask","taskList","console","log","state","addedNewTasks","addToList","listArray","list","push","localStorage","setItem","JSON","stringify","addingTaskToList","x","getItem","y","alpha","a","b","addTaskArray","filter","value","index","arr","handleClick","e","clicked","target","id","listLS","listLSParse","parse","clickedItem","projectItems","on","temporaryStorage","nullState","this","arrLS","getClickedItemName","getTasks","parseTasks","c","stateNull","jointArray","forEach","array","stateNullFull","Set","first","removeItem","window","addEventListener","className","type","onChange","placeholder","onClick","style","textDecoration","listStyleType","map","obj","key","cursor","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.082f17af.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport removeBtn from './removeBtn';\r\n\r\n\r\nclass MainToDo extends Component {\r\n    constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userInput: '',\r\n      list: [],\r\n      clickedItem: [],\r\n      taskList: '',\r\n      projectItems: [],\r\n      addedNewTasks: [\"null\"],\r\n      on: false,\r\n      temporaryStorage: [],\r\n      nullState: []\r\n    }\r\n  }\r\n  firstUserInput = (input) => {\r\n    this.setState({\r\n        userInput: input\r\n    });\r\n  }\r\n  \r\n  addingTask = (input) => {\r\n      this.setState({\r\n          taskList: input\r\n      })\r\n       console.log(this.state.addedNewTasks);\r\n  }\r\n\r\n  addToList = (input) => {\r\n      let listArray = this.state.list;\r\n      listArray.push(input);\r\n\r\n      localStorage.setItem('listLS', JSON.stringify(this.state.list));\r\n    \r\n      this.setState({\r\n          list: listArray,\r\n          userInput: '',\r\n          addedNewTasks: []\r\n      })\r\n      console.log(this.state.addedNewTasks);\r\n  }\r\n  addingTaskToList = (input) => {\r\n    console.log(this.state.addedNewTasks);\r\n    let x = localStorage.getItem('clickedItem');\r\n    let y = x;\r\n    let alpha = this.state.taskList;\r\n\r\n    let a = localStorage.getItem('clickedItem');\r\n    let b = localStorage.getItem(a);\r\n\r\n    localStorage.setItem('shadowedTasks', b);\r\n    localStorage.setItem(y, JSON.stringify(alpha));\r\n    let c = localStorage.getItem('shadowedTasks');\r\n\r\n    console.log(this.state.addedNewTasks);\r\n    let addTaskArray = this.state.addedNewTasks;\r\n    console.log(this.state.addedNewTasks);\r\n    addTaskArray.push(input); \r\n    \r\n    console.log(this.state.addedNewTasks);\r\n     this.setState({\r\n        addedNewTasks: addTaskArray, \r\n         taskList: ''\r\n     }) \r\n     console.log(this.state.addedNewTasks);\r\n    localStorage.setItem(x, JSON.stringify(this.state.addedNewTasks.\r\n        filter(function (value, index, arr) {\r\n            return value !== \"null\"})\r\n            )); \r\n            console.log(this.state.addedNewTasks);\r\n}\r\n   componentDidMount() {\r\n       if(localStorage.getItem('listLS') === null) { \r\n                this.setState({\r\n                    list: []\r\n                })\r\n            } else {\r\n                let arrLS = localStorage.getItem('listLS');\r\n                let parse = JSON.parse(arrLS);\r\n\r\n                this.setState({\r\n                      list: parse\r\n                })\r\n        }\r\n\r\n        if(localStorage.getItem('clickedItem') === null) {\r\n            this.setState({\r\n                addedNewTasks: []\r\n            })\r\n         } else {\r\n                let getClickedItemName = localStorage.getItem('clickedItem');\r\n                let getTasks = localStorage.getItem(getClickedItemName); \r\n                let parseTasks = JSON.parse(getTasks);\r\n\r\n                this.setState({\r\n                    addedNewTasks: parseTasks\r\n                });\r\n\r\n                localStorage.setItem('shadowedTasks', getTasks); \r\n        } \r\n    } \r\n    \r\n    componentDidUpdate() {\r\n        if(localStorage.getItem('shadowedTasks') !== null && localStorage.getItem('clickedItem') !== null) {\r\n        let a = localStorage.getItem('clickedItem');\r\n        let b = localStorage.getItem(a);\r\n        let c = localStorage.getItem('shadowedTasks');\r\n        console.log(this.state.addedNewTasks);        \r\n                let getTasks = localStorage.getItem([a]);\r\n                let combine = [getTasks||[], c||[]];\r\n                const stateNull = combine.filter(function (value, index, arr) {\r\n                         return value !== \"null\"\r\n                 });\r\n                 console.log(this.state.addedNewTasks);    \r\n                     let jointArray = [];\r\n\r\n                     stateNull.forEach(array => {\r\n                        jointArray = [...jointArray, array] \r\n                     })\r\n                     const stateNullFull = [...new Set([...jointArray])];\r\n                     const [first, ...rest] = stateNullFull;\r\n                     console.log(this.state.addedNewTasks);     \r\n                localStorage.setItem(a, first);\r\n                localStorage.removeItem('shadowedTasks'); \r\n                console.log(this.state.addedNewTasks);\r\n                if(this.state.addedNewTasks !== b) {\r\n                     this.setState({\r\n                         addedNewTasks: JSON.parse(b)\r\n                    })\r\n                    console.log(this.state.addedNewTasks);\r\n                }\r\n        }\r\n        console.log(this.state.addedNewTasks);\r\n} \r\n\r\n  componentWillUnmount() {\r\n      window.addEventListener('beforeunload', function(e) {\r\n          return localStorage.push(this.state.list);\r\n          console.log(this.state.addedNewTasks);\r\n      })\r\n  }\r\n  \r\n  handleClick = e => { //if clicked item nije vrednost stejta\r\n      let clicked = e.target.id; \r\n      let listLS = localStorage.getItem('listLS');\r\n      let listLSParse = JSON.parse(listLS);\r\n      localStorage.setItem('clickedItem', listLSParse[clicked]);\r\n      let a = localStorage.getItem('clickedItem');\r\n      let b = localStorage.getItem(a);\r\n      console.log(this.state.addedNewTasks);\r\n      this.setState({\r\n        clickedItem: localStorage.getItem('clickedItem')\r\n      });\r\n      console.log(this.state.addedNewTasks);\r\n      (b !== null) ? \r\n        this.setState({ \r\n            addedNewTasks: JSON.parse(b)\r\n        }) :\r\n        this.setState({addedNewTasks: [\"null\"]});\r\n        \r\n  }\r\n \r\n    render() {\r\n        return (\r\n                <div className=\"ui container\">\r\n                    <div className=\"container-segment\">\r\n                        <h2 className=\"ui project\">Add your new project</h2>\r\n                        <input type=\"text\" \r\n                        onChange={(e) => this.firstUserInput(e.target.value)}\r\n                        value={this.state.userInput}  \r\n                        placeholder=\"Enter Project\" />\r\n                        <button onClick={() => this.addToList(this.state.userInput)}>Add</button>\r\n                    </div>\r\n                    <div className=\"container-segment\">\r\n                        <h2 className=\"ui project\">Projects</h2>\r\n                            <ul style={{textDecoration: 'none', listStyleType:'none'}}>\r\n                                {this.state.list.map((obj, id) => \r\n                                    <li key={obj[id]} id={id}\r\n                                    onClick={this.handleClick}\r\n                                    style={{cursor: 'pointer'}}>\r\n                                        {obj}\r\n                                    </li>\r\n                                )} \r\n                            </ul>\r\n                    </div>\r\n                    <div className=\"container-segment\">\r\n                        <h2 className=\"ui project\">\r\n                            {this.state.clickedItem} \r\n                            <input  type=\"text\"\r\n                                    onChange={(e) => this.addingTask(e.target.value)}\r\n                                    value={this.state.taskList} \r\n                            placeholder=\"Enter Task\" /> \r\n                            <button onClick={() => this.addingTaskToList(this.state.taskList)}>Add Task</button> \r\n                        </h2>\r\n                    </div>\r\n                    <div className=\"container-segment\">\r\n                    <ul style={{textDecoration: 'none', listStyleType:'none'}}>\r\n                        {this.state.addedNewTasks\r\n                            .filter(function (value, index, arr) {\r\n                                return value !== \"null\"})\r\n                            .map((obj, id) => \r\n                        <li key={obj[id]} id={id}>\r\n                            {obj}  \r\n                        </li>\r\n    )}   \r\n                                        \r\n                    </ul>\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainToDo;\r\n\r\n//najveci problem je shvatiti problem\r\n//Da pisu te moje izreke","import React from 'react';\nimport MainToDo from './components/MainToDo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainToDo />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}